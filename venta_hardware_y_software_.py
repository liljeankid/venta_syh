# -*- coding: utf-8 -*-
"""Venta hardware y software .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16YJKZLtU4Zv0L78qRICy8GrGTY2bCJ40
"""

tabla_reporte = str.maketrans(".", "\n")
ant_buscado = ""
llaves_dist = {}
print_busqueda = ""
busqueda = ""
verificar_busqueda = ""
print_agregado = ""
nombre_usuario = ""
opc_editar = 0
num_o_nom_equivocados = ""
validar_nombre = ""
validar_nombre_can = 0
desc_producto = ""
opc_descripcion = ""
list_parte = {}
nombre_parte = ""
numero_parte = 0
numero_parte_primera = 0
numero_parte_segundo_letra = ""
numero_parte_segundo_numero = 0
precio_producto = 0
descripcion_parte = ""
opc_pag_principal = 0
pagina_principal = f'''
{"-"*40}
{f"¡Hola! {nombre_usuario.upper()}".center(40)}
{"-"*40}

1) Grabar
2) Buscar
3) Imprimir
4) Salir
{"-"*40}
'''

nombre_usuario = input("Cual es su nombre: ")

if not nombre_usuario.isalpha():
    nombre_usuario = input("Indique su nombre sin espacios y sin numeros: ")
    while not nombre_usuario.isalpha():
      nombre_usuario = input("Indique su nombre sin espacios y sin numeros: ")
pagina_principal = f'''
{"-"*40}
{f"¡Hola! {nombre_usuario.upper()}".center(40)}
{"-"*40}

1) Grabar
2) Buscar
3) Imprimir Reporte
4) Salir
{"-"*40}
'''
while True:
  def print_pagina_principal():
    print(pagina_principal)
  print_pagina_principal()

  opc_pag_principal = input("Seleccione una opcion: ")
  while opc_pag_principal == "" or not opc_pag_principal.isnumeric():
    opc_pag_principal = input("Seleccione una opcion: ")

  if int(opc_pag_principal) == 1:
    numero_parte_primera = input('Indique numeros de parte de la PRIMERA fila: ')
    while not numero_parte_primera.isnumeric() or int(numero_parte_primera) <= 99999:
      numero_parte_primera = input('Indique solo NUMEROS de parte de la PRIMERA fila mayor a 6 NUMEROS: ')
    numero_parte_segundo_letra = input('Indique letra(s) de la parte de la SEGUNDA fila: ').upper()

    while not numero_parte_segundo_letra.isalpha():
      numero_parte_segundo_letra = input('Indique LETRA(s) de la parte de la SEGUNDA fila: ').upper()
    numero_parte_segundo_numero = input('Indique numeros de la parte de la SEGUNDA fila: ')

    while not numero_parte_segundo_numero.isnumeric() or int(numero_parte_segundo_numero) <= 9:
      numero_parte_segundo_numero = input('Indique NUMEROS de la parte de la SEGUNDA fila: ')
    numero_parte_segundo = numero_parte_segundo_letra + numero_parte_segundo_numero
    numero_parte = numero_parte_primera + "-" + numero_parte_segundo
    print(numero_parte)
    num_o_nom_equivocados = input('Desea cambiar el numero de la parte si(Y) o no(N): ').upper()

    while num_o_nom_equivocados.islower() == True:
      num_o_nom_equivocados = num_o_nom_equivocados.upper()

    while num_o_nom_equivocados.isdigit() == True:
      num_o_nom_equivocados = input('si(Y) o no(N): ')

    while num_o_nom_equivocados == "Y":
      opc_editar = input("que parte desea editar .1)PRIMERA FILA .2)SEGUNDA FILA .ENTER) PARA CONTINUAR(SIN CAMBIO) ")

      if opc_editar == "1":
        numero_parte_primera = input('Indique numeros de parte de la PRIMERA fila: ')

        while not numero_parte_primera.isnumeric() or int(numero_parte_primera) <= 99999:
          numero_parte = input('Indique solo NUMEROS de parte de la PRIMERA fila mayor a 6: ')

      elif opc_editar == "2":
        numero_parte_segundo_letra = input('Indique letra(s) de la parte de la SEGUNDA fila: ')

        while not numero_parte_segundo_letra.isalpha():
          numero_parte_segundo_letra = input('Indique LETRA(s) de la parte de la SEGUNDA fila: ')
        numero_parte_segundo_numero = input('Indique numeros de la parte de la SEGUNDA fila: ')

        while not numero_parte_segundo_numero.isnumeric() or int(numero_parte_segundo_numero) <= 9:
          numero_parte_segundo_numero = input('Indique NUMEROS de la parte de la SEGUNDA fila: ')
      numero_parte_segundo = numero_parte_segundo_letra + numero_parte_segundo_numero
      numero_parte = numero_parte_primera + "-" + numero_parte_segundo
      print(numero_parte)
      num_o_nom_equivocados = input('Desea seguir cambiando el numero de la parte si(Y) o no(N): ')

      while num_o_nom_equivocados.islower() == True:
        num_o_nom_equivocados = num_o_nom_equivocados.upper()

    nombre_parte = input("Indique nombre de la parte: ")
    validar_nombre = nombre_parte

    if nombre_parte == "":
      nombre_parte = " ".isspace()

    for x in validar_nombre:
      validar_nombre_can += 1

    while nombre_parte == True or validar_nombre_can <= 5:
      nombre_parte = input("Indique un valor valido: ")
      validar_nombre = nombre_parte
      validar_nombre_can = 0

      if nombre_parte == "":
        nombre_parte = " ".isspace()

      for x in validar_nombre:
        validar_nombre_can += 1
    print(nombre_parte)
    num_o_nom_equivocados = input('Desea cambiar el nombre de la parte si(Y) o no(N): ').upper()

    while num_o_nom_equivocados.islower() == True:
      num_o_nom_equivocados = num_o_nom_equivocados.upper()

    while num_o_nom_equivocados.isdigit() == True:
      num_o_nom_equivocados = input('si(Y) o no(N): ')

    while num_o_nom_equivocados == "Y":
      nombre_parte = input("Indique nombre de la parte: ")
      validar_nombre = nombre_parte
      validar_nombre_can = 0

      if nombre_parte == "":
        nombre_parte = " ".isspace()

      for x in validar_nombre:
        validar_nombre_can += 1

      while nombre_parte == True or validar_nombre_can <= 5:
        nombre_parte = input("Indique un valor valido: ")
        validar_nombre = nombre_parte
        validar_nombre_can = 0

        if nombre_parte == "":
          nombre_parte = " ".isspace()

        for x in validar_nombre:
          validar_nombre_can += 1
      print(nombre_parte)
      num_o_nom_equivocados = input('Desea seguir cambiando el nombre de la parte si(Y) o no(N): ')

      while num_o_nom_equivocados.islower() == True:
        num_o_nom_equivocados = num_o_nom_equivocados.upper()


    nombre_parte = "." + nombre_parte.capitalize()

    precio_producto = input("Indique precio de parte y/o pruducto: ")

    while not precio_producto.isnumeric() or int(precio_producto) < 0:
      precio_producto = input("Indique precio de parte y/o pruducto VALIDO: ")
    print("$" + precio_producto)
    num_o_nom_equivocados = input('Desea cambiar el precio del pruducto si(Y) o no(N): ')

    while num_o_nom_equivocados.islower() == True:
      num_o_nom_equivocados = num_o_nom_equivocados.upper()

    while num_o_nom_equivocados.isdigit() == True:
      num_o_nom_equivocados = input('si(Y) o no(N): ')

    while num_o_nom_equivocados == "Y":
      precio_producto = input("Indique precio de parte y/o pruducto: ")

      while not precio_producto.isnumeric() or int(precio_producto) < 0:
        precio_producto = input("Indique precio de parte y/o pruducto VALIDO: ")
      print("$" + precio_producto)
      num_o_nom_equivocados = input('Desea seguir cambiando el precio del pruducto si(Y) o no(N): ')

      while num_o_nom_equivocados.islower() == True:
        num_o_nom_equivocados = num_o_nom_equivocados.upper()

    if int(precio_producto) <= 499:
      precio_producto = (f" .Producto sin stock.")

    elif int(precio_producto) >= 500:
      precio_producto = (f" .EL precio del producto es : $" + precio_producto + ".")
    desc_producto = ""
    opc_descripcion = input("Desea agregar alguna descripcion a esta parte si(Y) o no(N): ").upper()

    if opc_descripcion == "Y":
      desc_producto = input(f" Agrege la descripcion:\n ")
    list_parte.update({numero_parte : nombre_parte + precio_producto})
    print_agregado = ("Se agrego al sistema:  Nº parte: "  + numero_parte + " Nombre parte: ,"+ nombre_parte.strip(".") + precio_producto.strip("."))

    if  desc_producto != "":
      desc_producto = " " + desc_producto.capitalize() + (".")
      list_parte.update({numero_parte : nombre_parte + precio_producto + desc_producto})
      print_agregado = ("Se agrego al sistema -  Nº parte: "  + numero_parte + ", Nombre parte: "+ nombre_parte.strip(".") + precio_producto.strip(".") + ", Descripcion parte: "+ desc_producto)
    print("\n" + print_agregado)
    input("presione enter para continuar....")

  elif int(opc_pag_principal) == 2:
    verificar_busqueda = input("Ingrese numeros de la primera parte valida del producto: ")
    while not verificar_busqueda.isnumeric() or int(verificar_busqueda) <= 99999:
      verificar_busqueda = input("Ingrese NUMEROS DE LA PRIMERA PARTE VALIDA del producto: ")

    busqueda = verificar_busqueda

    verificar_busqueda = input("Ingrese LETRA(s) de la segunda parte valida del producto: ").upper()

    while not verificar_busqueda.isalpha():
      verificar_busqueda = input('Indique LETRA(s) de la parte de la SEGUNDA fila: ').upper()

    busqueda = busqueda + "-" + verificar_busqueda

    verificar_busqueda = input('Indique numeros de la parte de la SEGUNDA fila: ')

    while not verificar_busqueda.isnumeric() or int(verificar_busqueda) <= 9:
      verificar_busqueda = input('Indique NUMEROS de la parte de la SEGUNDA fila: ')

    busqueda = busqueda + verificar_busqueda
    llaves_dist = list_parte.keys()
    if not busqueda in llaves_dist :
      print(busqueda)
      input("No se pudo encontar el nº de parte verifique que sea correcto e intentelo de nuevo....")
      busqueda = " "
    if busqueda in llaves_dist:
      print_busqueda = list_parte.get(busqueda)
      print(busqueda + " informacion de parte: " + print_busqueda)
    input("presiona enter para continuar...")
  elif int(opc_pag_principal) == 3:
    if busqueda != " ":
      ant_buscado = input("Desea hacer el reporte de lo anteriormente buscado si(Y) no(N): ").upper()
      while ant_buscado.islower() == True:
        ant_buscado = num_o_nom_equivocados.upper()

      if ant_buscado == "":
        ant_buscado = " ".isspace()

      while ant_buscado == True :
        ant_buscado = input("Indique un valor valido SI(Y) o NO(N): ")

      if ant_buscado == "Y" and busqueda in llaves_dist:
        print_busqueda = list_parte.get(busqueda)
        print(busqueda + " Reporte nombre: " + print_busqueda.translate(tabla_reporte))
      busqueda == " "
    if busqueda.isspace == True or not ant_buscado == "Y":
      verificar_busqueda = input("Ingrese numeros de la primera parte valida del producto: ")
      while not verificar_busqueda.isnumeric() or int(verificar_busqueda) <= 99999:
        verificar_busqueda = input("Ingrese NUMEROS DE LA PRIMERA PARTE VALIDA del producto: ")

      busqueda = verificar_busqueda

      verificar_busqueda = input("Ingrese LETRA(s) de la segunda parte valida del producto: ").upper()

      while not verificar_busqueda.isalpha():
        verificar_busqueda = input('Indique LETRA(s) de la parte de la SEGUNDA fila: ').upper()

      busqueda = busqueda + "-" + verificar_busqueda

      verificar_busqueda = input('Indique numeros de la parte de la SEGUNDA fila: ')

      while not verificar_busqueda.isnumeric() or int(verificar_busqueda) <= 9:
        verificar_busqueda = input('Indique NUMEROS de la parte de la SEGUNDA fila: ')

      busqueda = busqueda + verificar_busqueda
      llaves_dist = list_parte.keys()
    if not busqueda in llaves_dist :
      print("Nº parte: " + busqueda)
      input("No se pudo encontar el nº de parte o no se busco nada con anterioridad verifique que sea correcto e intentelo de nuevo....")
      busqueda = " "
    if busqueda in llaves_dist:
      print_busqueda = list_parte.get(busqueda)
      print(busqueda + " Reporte nombre: " + print_busqueda.translate(tabla_reporte))
      busqueda = " "
      input("presione enter para continuar...")
  elif int(opc_pag_principal) == 4:
    print(f"Ultimo cambio hecho por {nombre_usuario} \n Product by Jean Carlos Diaz Perez v1.0")
    break

  else:
    input("opcion de menu incorrecta presione enter y intentelo de nuevo....")

pagina_principal = f'''
{"-"*60}
{"¡Hola! Usuario".center(30)}
{"-"*60}

1) Grabar
2) Buscar
3) Imprimir
$) Salir
'''
print(pagina_principal)

a = input()
if  int(a) >= 2:
  print(a.isalnum())

num_o_nom_equivocados = input('Desea cambiar el numero de parte si(Y) o no(N): ').upper()
print(num_o_nom_equivocados)

num_o_nom_equivocados = input('Desea cambiar el numero de parte si(Y) o no(N): ')
while num_o_nom_equivocados.islower() == True:
  num_o_nom_equivocados = num_o_nom_equivocados.upper()
print(num_o_nom_equivocados)
print(num_o_nom_equivocados.islower())

num_o_nom_equivocados = input("")
if num_o_nom_equivocados == "":
  num_o_nom_equivocados = " ".isspace()
while num_o_nom_equivocados == True:
  print("a")
print(num_o_nom_equivocados)

vali = ""
vali_digi = 0
vali = input()
for x in vali:
  vali_digi += 1
print(vali_digi)

def validar_cadena(cadena):
    digitos = 0
    for caracter in cadena:
          digitos += 1
          if digitos > 6:
              return True
    return False

cadena = input("Ingrese una cadena: ")
if validar_cadena(cadena):
    print("La cadena tiene más de 6 dígitos.")
else:
    print("La cadena no tiene más de 6 dígitos.")

list_parte.update({numero_parte : nombre_parte + precio_producto + desc_producto})
print(list_parte)